{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/ListGenre.js\";\nimport React, { Component } from \"react\";\nimport { Table, Card, CardHeader, Spinner } from \"reactstrap\";\nimport { FETCH_DATA, FETCH_COMPLETE } from \"../reducers/Actions\";\nimport * as Service from \"../services/GenreService\";\nimport { connect } from \"react-redux\";\n\nclass ListGenre extends Component {\n  componentDidMount() {\n    const {\n      fetchData,\n      fetchComplete\n    } = this.props;\n    fetchData();\n    Service.getGenres().then(genres => {\n      fetchComplete(genres);\n    });\n  }\n\n  generateTableRows() {\n    const {\n      genres\n    } = this.props;\n    let rows = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      type: \"grow\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 65\n      }\n    })));\n\n    if (!this.props.isLoading) {\n      rows = genres.map((genre, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, genre.name));\n      });\n    }\n\n    return rows;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"strong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      striped: true,\n      hover: true,\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.generateTableRows())));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => dispatch({\n      type: FETCH_DATA\n    }),\n    fetchComplete: payload => dispatch({\n      type: FETCH_COMPLETE,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListGenre);","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/ListGenre.js"],"names":["React","Component","Table","Card","CardHeader","Spinner","FETCH_DATA","FETCH_COMPLETE","Service","connect","ListGenre","componentDidMount","fetchData","fetchComplete","props","getGenres","then","genres","generateTableRows","rows","isLoading","map","genre","index","name","render","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Card, CardHeader, Spinner } from \"reactstrap\";\nimport { FETCH_DATA, FETCH_COMPLETE } from \"../reducers/Actions\";\nimport * as Service from \"../services/GenreService\";\nimport { connect } from \"react-redux\";\n\n\nclass ListGenre extends Component{\n    componentDidMount() {\n        const { fetchData, fetchComplete } = this.props;\n\n        fetchData();\n\n        Service.getGenres().then((genres) => {\n            fetchComplete(genres);\n        });\n\n    }\n\n    generateTableRows(){\n      const { genres } = this.props;\n        let rows = <tr><td colSpan=\"2\" className=\"text-center\"> <Spinner type=\"grow\" color=\"primary\" /></td></tr>\n\n        if(!this.props.isLoading){\n            rows = genres.map((genre, index) => {\n                return(\n                    <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{genre.name}</td>\n                    </tr>\n                )\n            });\n        }\n\n        return rows;\n    }\n\nrender(){\n    return(\n        <Card className=\"shadow\">\n            \n            <CardHeader tag=\"strong\">\n                Genres\n            </CardHeader>\n        \n        <Table responsive striped hover className=\"m-0\">\n         <thead>\n             <tr>\n            <th>\n                #\n            </th>\n            <th>\n                Name\n            </th>\n            </tr>\n        </thead>\n        <tbody>\n            { this.generateTableRows() }\n        </tbody>\n        </Table>\n        </Card>\n    );\n}\n\n}\n\nfunction mapStateToProps(state) {\n    return { ...state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchData: () => dispatch({type: FETCH_DATA}),\n        fetchComplete: (payload) => dispatch({type: FETCH_COMPLETE, payload}),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListGenre);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/ListGenre.js\";\nimport React, { Component } from \"react\";\nimport { Table, Card, CardHeader, Spinner, Button } from \"reactstrap\";\nimport { FETCH_COMPLETE, SET_LOADING, EDIT_BUTTON } from \"../reducers/Actions\";\nimport * as Service from \"../services/GenreService\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\n\nclass ListGenre extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEdit = genreId => {\n      const {\n        handleEditButton,\n        history\n      } = this.props;\n      handleEditButton(genreId);\n      history.replace(\"/genres/form\");\n    };\n\n    this.handleDelete = genreId => {\n      Service.deleteGenre(genreId).then(isSuccess => {\n        if (isSuccess) this.loadData();\n      });\n    };\n  }\n\n  loadData() {\n    const {\n      fetchData,\n      fetchComplete\n    } = this.props;\n    console.log(this.props.location.query);\n    fetchData();\n    Service.getGenres().then(genres => {\n      fetchComplete(genres);\n    });\n  }\n\n  componentDidMount() {\n    const {\n      fetchData,\n      fetchComplete\n    } = this.props;\n    fetchData();\n    Service.getGenres().then(genres => {\n      fetchComplete(genres);\n    });\n  }\n\n  generateTableRows() {\n    const {\n      genres\n    } = this.props;\n    let rows = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      type: \"grow\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 65\n      }\n    })));\n\n    if (!this.props.isLoading) {\n      rows = genres.map((genre, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }, genre.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          color: \"warning\",\n          size: \"sm\",\n          className: \"shadow\",\n          onClick: () => this.handleEdit(genre.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Popup, {\n          trigger: /*#__PURE__*/React.createElement(\"button\", {\n            className: \"button\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }\n          }, \"Delete\"),\n          modal: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }\n        }, close => /*#__PURE__*/React.createElement(\"div\", {\n          className: \"modal\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"close\",\n          onClick: close,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }\n        }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 41\n          }\n        })))));\n      });\n    }\n\n    return rows;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"strong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Genres\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/genres/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"float-right\",\n      size: \"sm\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, \" New Genre\")), \">\"), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      striped: true,\n      hover: true,\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, this.generateTableRows())));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => dispatch({\n      type: SET_LOADING\n    }),\n    fetchComplete: payload => dispatch({\n      type: FETCH_COMPLETE,\n      payload\n    }),\n    handleEditButton: payload => dispatch({\n      type: EDIT_BUTTON,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ListGenre));","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/ListGenre.js"],"names":["React","Component","Table","Card","CardHeader","Spinner","Button","FETCH_COMPLETE","SET_LOADING","EDIT_BUTTON","Service","connect","Link","withRouter","Popup","ListGenre","handleEdit","genreId","handleEditButton","history","props","replace","handleDelete","deleteGenre","then","isSuccess","loadData","fetchData","fetchComplete","console","log","location","query","getGenres","genres","componentDidMount","generateTableRows","rows","isLoading","map","genre","index","name","id","close","render","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Card, CardHeader, Spinner, Button } from \"reactstrap\";\nimport { FETCH_COMPLETE, SET_LOADING, EDIT_BUTTON } from \"../reducers/Actions\";\nimport * as Service from \"../services/GenreService\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Popup from \"reactjs-popup\";\n\nclass ListGenre extends Component {\n\n    loadData() {\n        const { fetchData, fetchComplete } = this.props;\n        console.log(this.props.location.query);\n\n        fetchData();\n\n        Service.getGenres().then((genres) => {\n            fetchComplete(genres);\n        });\n\n    }\n\n    handleEdit = (genreId) => {\n        const { handleEditButton, history } = this.props;\n        handleEditButton(genreId);\n        history.replace(\"/genres/form\")\n    }\n\n    handleDelete = (genreId) => {\n        Service.deleteGenre(genreId).then((isSuccess) => {\n            if (isSuccess) this.loadData();\n        })\n\n    }\n\n\n    componentDidMount() {\n        const { fetchData, fetchComplete } = this.props;\n\n        fetchData();\n\n        Service.getGenres().then((genres) => {\n            fetchComplete(genres);\n        });\n\n    }\n\n    generateTableRows() {\n        const { genres } = this.props;\n        let rows = <tr><td colSpan=\"2\" className=\"text-center\"> <Spinner type=\"grow\" color=\"primary\" /></td></tr>\n\n        if (!this.props.isLoading) {\n            rows = genres.map((genre, index) => {\n                return (\n                    <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{genre.name}</td>\n                        <td>\n                            <Button type=\"button\"\n                                color=\"warning\" size=\"sm\"\n                                className=\"shadow\"\n                                onClick={() => this.handleEdit(genre.id)}>\n                                Edit\n                            </Button>\n                            <Popup trigger={<button className=\"button\">Delete</button>} modal>\n                                {close => (\n                                    <div className=\"modal\">\n                                        <a className=\"close\" onClick={close}>\n                                            &times;\n                                        </a>\n                                        <div></div>\n                                    </div>\n                                )}\n                            </Popup>\n\n                            {/* <Button type=\"button\"\n                                color=\"danger\" size=\"sm\"\n                                className=\"shadow\" onClick={() => this.handleDelete(genre.id)}>\n                                Delete\n                                </Button> */}\n                        </td>\n\n                    </tr>\n                )\n            });\n\n        }\n\n        return rows;\n\n    }\n\n    render() {\n        return (\n            <Card className=\"shadow\">\n                <CardHeader tag=\"strong\">Genres\n                <Link to=\"/genres/form\"><Button className=\"float-right\" size=\"sm\" color=\"primary\"> New Genre</Button></Link>>\n                </CardHeader>\n\n                <Table responsive striped hover className=\"m-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.generateTableRows()}\n                    </tbody>\n                </Table>\n            </Card>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return { ...state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchData: () => dispatch({ type: SET_LOADING }),\n        fetchComplete: (payload) => dispatch({ type: FETCH_COMPLETE, payload }),\n        handleEditButton: (payload) => dispatch({ type: EDIT_BUTTON, payload }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ListGenre));"]},"metadata":{},"sourceType":"module"}
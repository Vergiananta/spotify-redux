{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project/src/component/Genre/ListGenre.js\";\nimport React, { Component } from 'react';\nimport { Table, Card, CardHeader, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { FETCH_DATA, FETCH_COMPLETE } from './reducer/Action';\nimport { getGenres } from './service/GenreService';\n\nclass ListGenre extends Component {\n  componentDidMount() {\n    const {\n      fetchData,\n      fetchComplete\n    } = this.props;\n    fetchData();\n    getGenres().then(genres => {\n      fetchComplete(genres);\n    });\n  }\n\n  generateTableRows() {\n    const {\n      genres\n    } = this.props;\n    let rows = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colspan: \"2\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 64\n      }\n    })));\n\n    if (!this.props.isLoading) {\n      rows = genres.map((genre, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, genre.name));\n      });\n    }\n\n    return rows;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"strong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      striped: true,\n      hover: true,\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, \"Genre Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, this.generateTableRows())));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToPatch(dispatch) {\n  return {\n    fetchData: () => dispatch({\n      type: FETCH_DATA\n    }),\n    fetchComplete: payload => dispatch({\n      type: FETCH_COMPLETE,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToPatch)(ListGenre);","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project/src/component/Genre/ListGenre.js"],"names":["React","Component","Table","Card","CardHeader","Spinner","connect","FETCH_DATA","FETCH_COMPLETE","getGenres","ListGenre","componentDidMount","fetchData","fetchComplete","props","then","genres","generateTableRows","rows","isLoading","map","genre","index","name","render","mapStateToProps","state","mapDispatchToPatch","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Card, CardHeader, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { FETCH_DATA, FETCH_COMPLETE } from './reducer/Action'\nimport { getGenres } from './service/GenreService'\n\nclass ListGenre extends Component {\n\n    componentDidMount() {\n        const { fetchData, fetchComplete } = this.props;\n\n        fetchData();\n\n        getGenres()\n            .then((genres) => {\n                fetchComplete(genres);\n            });\n    }\n\n\n    generateTableRows() {\n        const { genres } = this.props;\n        let rows = <tr><td colspan=\"2\" className=\"text-center\"><Spinner color=\"primary\" /></td></tr>\n\n        if (!this.props.isLoading) {\n            rows = genres.map((genre, index) => {\n                return (\n                    <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{genre.name}</td>\n                    </tr>\n                )\n            });\n        }\n\n        return rows;\n    }\n\n\n    render() {\n        return (\n            <Card className=\"shadow\">\n                <CardHeader tag=\"strong\">Genres</CardHeader>\n                <Table responsive striped hover className=\"m-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Genre Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>{this.generateTableRows()}</tbody>\n                </Table>\n            </Card>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { ...state };\n}\n\nfunction mapDispatchToPatch(dispatch) {\n    return {\n        fetchData: () => dispatch({ type: FETCH_DATA }),\n        fetchComplete: (payload) => dispatch({ type: FETCH_COMPLETE, payload }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToPatch)(ListGenre);"]},"metadata":{},"sourceType":"module"}
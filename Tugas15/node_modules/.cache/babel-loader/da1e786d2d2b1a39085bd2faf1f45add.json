{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/albums/component/AlbumForm.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Input, Card, Col, Label, Form, CardHeader, FormGroup, CardBody, CustomInput } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { createAlbum, updateAlbum } from '../services/AlbumService';\nimport { INPUT_ALBUM, SET_LOADING, SUBMIT_ALBUM, IMAGE_ALBUM } from '../reducers/Actions';\nimport * as Service from '../services/AlbumService';\n\nclass AlbumForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleImage = event => {\n      const {\n        selectedImage\n      } = this.state;\n      this.setState({\n        selectedImage: event.target.files[0]\n      });\n    };\n\n    this.submitAlbumData = async () => {\n      const {\n        form\n      } = this.props;\n      if (form.id) return await updateAlbum(form);else return await createAlbum(form);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        setLoading,\n        submitComplete,\n        history\n      } = this.props;\n      this.setState({\n        isSubmitting: true\n      });\n      setLoading();\n      this.submitAlbumData().then(data => {\n        submitComplete();\n        this.setState({\n          isSubmitting: false\n        });\n        history.replace('/albums');\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        form,\n        isLoading\n      } = this.props;\n      const forms = form.title.length > 0 && form.description.length > 0 && form.releaseYear.length > 0 && form.discount.length > 0;\n      return forms || isLoading;\n    };\n\n    this.handleReturn = () => {\n      const {\n        history\n      } = this.props;\n      history.replace(\"/albums\");\n    };\n\n    this.state = {\n      isSubmitting: false,\n      selectedImage: ''\n    };\n  }\n\n  optionYear(x, y) {\n    let year = [];\n\n    for (let i = x; i <= y; i++) {\n      year.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: year[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, i));\n    }\n\n    return year;\n  }\n\n  render() {\n    const {\n      form,\n      isLoading,\n      handleInputChanges,\n      handleImage\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Album Form\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"title\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, \"Album Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: form.title,\n      placeholder: \"Enter Album Name\",\n      onChange: event => handleInputChanges('title', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"description\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: form.description,\n      placeholder: \"Enter Album Description\",\n      onChange: event => handleInputChanges('description', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"releaseYear\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, \"Release Year\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      id: \"releaseYear\",\n      name: \"releaseYear\",\n      value: form.releaseYear,\n      onChange: event => handleInputChanges('releaseYear', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      default: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, \"--select year--\"), this.optionYear(1950, 2020)))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"discount\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, \"Discount\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"discount\",\n      name: \"discount\",\n      value: form.discount,\n      placeholder: \"Enter Album Discount\",\n      onChange: event => handleInputChanges('discount', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"image\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"file\",\n      accept: \"image/png, image/jpeg, image/jpg\",\n      label: form.image,\n      onChange: event => handleImage(event.target.files),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        size: 9,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      disabled: !this.isValid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, !isLoading ? 'Save Genre' : 'Submiting Data...'), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"secondary\",\n      onClick: this.handleReturn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, \"Return\")))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleInputChanges: (inputName, inputValue) => dispatch({\n      type: INPUT_ALBUM,\n      payload: {\n        inputName,\n        inputValue\n      }\n    }),\n    setLoading: () => dispatch({\n      type: SET_LOADING\n    }),\n    submitComplete: () => dispatch({\n      type: SUBMIT_ALBUM\n    }),\n    handleImage: payload => dispatch({\n      type: IMAGE_ALBUM,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AlbumForm));","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/albums/component/AlbumForm.js"],"names":["React","Component","Fragment","Input","Card","Col","Label","Form","CardHeader","FormGroup","CardBody","CustomInput","withRouter","connect","Button","createAlbum","updateAlbum","INPUT_ALBUM","SET_LOADING","SUBMIT_ALBUM","IMAGE_ALBUM","Service","AlbumForm","constructor","props","handleImage","event","selectedImage","state","setState","target","files","submitAlbumData","form","id","handleSubmit","preventDefault","setLoading","submitComplete","history","isSubmitting","then","data","replace","isValid","isLoading","forms","title","length","description","releaseYear","discount","handleReturn","optionYear","x","y","year","i","push","render","handleInputChanges","value","image","size","offset","mapStateToProps","mapDispatchToProps","dispatch","inputName","inputValue","type","payload"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Input, Card, Col, Label, Form, CardHeader, FormGroup, CardBody, CustomInput } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { createAlbum, updateAlbum } from '../services/AlbumService';\nimport { INPUT_ALBUM, SET_LOADING, SUBMIT_ALBUM, IMAGE_ALBUM } from '../reducers/Actions';\nimport * as Service from '../services/AlbumService'\n\n\nclass AlbumForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSubmitting: false,\n            selectedImage: '',\n        }\n    }\n\n    handleImage = (event) => {\n        const { selectedImage } = this.state;\n        this.setState({ selectedImage: event.target.files[0] })\n    }\n\n    submitAlbumData = async () => {\n        const { form } = this.props;\n        if (form.id) return await updateAlbum(form);\n        else return await createAlbum(form)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { setLoading, submitComplete, history } = this.props;\n        this.setState({ isSubmitting: true });\n\n        setLoading();\n        this.submitAlbumData().then((data) => {\n            submitComplete();\n            this.setState({ isSubmitting: false });\n            history.replace('/albums');\n        });\n    }\n\n    isValid = () => {\n        const { form, isLoading } = this.props;\n        const forms = form.title.length > 0 && form.description.length > 0 && form.releaseYear.length > 0 && form.discount.length > 0;\n        return forms || isLoading;\n    }\n\n    optionYear(x, y) {\n        let year = [];\n        for (let i = x; i <= y; i++) {\n            year.push(<option key={i} value={year[i]}>{i}</option>);\n        }\n        return year;\n    }\n\n    handleReturn = () => {\n        const { history } = this.props;\n        history.replace(\"/albums\");\n    }\n\n    render() {\n        const { form, isLoading, handleInputChanges, handleImage } = this.props;\n        return (\n            <Fragment>\n                <Card>\n                    <CardHeader tag=\"form\">Album Form</CardHeader>\n                    <CardBody>\n                        <Form>\n                            <FormGroup row>\n                                <Label for=\"title\" sm=\"3\">Album Name</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"text\" id=\"title\" name=\"title\" value={form.title} placeholder=\"Enter Album Name\" onChange={(event) => handleInputChanges('title', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"description\" sm=\"3\">Description</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"text\" id=\"description\" name=\"description\" value={form.description} placeholder=\"Enter Album Description\" onChange={(event) => handleInputChanges('description', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"releaseYear\" sm=\"3\">Release Year</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"select\" id=\"releaseYear\" name=\"releaseYear\" value={form.releaseYear} onChange={(event) =>\n                                        handleInputChanges('releaseYear', event.target.value)}>\n                                        <option default >--select year--</option>\n                                        {this.optionYear(1950, 2020)}\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"discount\" sm=\"3\">Discount</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"text\" id=\"discount\" name=\"discount\" value={form.discount} placeholder=\"Enter Album Discount\" onChange={(event) => handleInputChanges('discount', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"image\" sm=\"3\">Image</Label>\n                                <Col sm=\"9\">\n                                    <CustomInput type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" label={form.image} onChange={(event) => handleImage(event.target.files)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col sm={{ size: 9, offset: 3 }}>\n                                    <Button type=\"submit\" color=\"primary\" disabled={!this.isValid()}>\n\n                                        {!isLoading ? 'Save Genre' : 'Submiting Data...'}\n                                    </Button>\n\n                                    <Button type=\"button\" color=\"secondary\" onClick={this.handleReturn}>\n                                        Return\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { ...state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        handleInputChanges: (inputName, inputValue) => dispatch({ type: INPUT_ALBUM, payload: { inputName, inputValue } }),\n        setLoading: () => dispatch({ type: SET_LOADING }),\n        submitComplete: () => dispatch({ type: SUBMIT_ALBUM }),\n        handleImage: (payload) => dispatch({ type: IMAGE_ALBUM, payload }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AlbumForm));\n"]},"metadata":{},"sourceType":"module"}
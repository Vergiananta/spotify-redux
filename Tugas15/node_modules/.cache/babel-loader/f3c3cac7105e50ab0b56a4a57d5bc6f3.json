{"ast":null,"code":"import { FETCH_DATA } from \"./Action\";\nconst defaultFormValues = {\n  id: '',\n  name: ''\n};\nconst initialState = {\n  isLoading: true,\n  genres: [],\n  form: { ...defaultFormValues\n  }\n};\n\nfunction genreReducer(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CREATE_GENRE:\n      return { ...state,\n        genres: state.genres.concat([{ ...payload\n        }])\n      };\n\n    case UPDATE_GENRE:\n      return { ...state,\n        genres: state.genres.map(genre => genre.id === payload.id ? { ...payload\n        } : genre)\n      };\n\n    case INPUT_GENRE:\n      const {\n        inputName,\n        inputValue\n      } = payload;\n      const form = { ...state.form\n      };\n      form[inputName] = inputValue;\n      return { ...state,\n        form: { ...form\n        }\n      };\n\n    case EDIT_GENRE:\n      const genre = state.genres.find(genre => genre.id === payload);\n      return { ...state,\n        form: { ...genre\n        }\n      };\n\n    case DELETE_GENRE:\n      return { ...state,\n        genres: state.genres.filter(genre => genre.id !== payload)\n      };\n\n    case SEARCH_GENRE:\n      return { ...state,\n        keyword: payload\n      };\n\n    case RESET_GENRE:\n      return { ...state,\n        form: { ...defaultFormValues\n        }\n      };\n\n    case FETCH_DATA:\n      return { ...state,\n        isLoading: true\n      };\n\n    case FETCH_COMPLETE:\n      return { ...state,\n        isLoading: false,\n        genres: [...payload]\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default genreReducer;","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project/src/component/Genre/reducer/GenreReducer.js"],"names":["FETCH_DATA","defaultFormValues","id","name","initialState","isLoading","genres","form","genreReducer","state","action","type","payload","CREATE_GENRE","concat","UPDATE_GENRE","map","genre","INPUT_GENRE","inputName","inputValue","EDIT_GENRE","find","DELETE_GENRE","filter","SEARCH_GENRE","keyword","RESET_GENRE","FETCH_COMPLETE"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,EAAE,EAAE,EADkB;AAEtBC,EAAAA,IAAI,EAAE;AAFgB,CAA1B;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,IADM;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,IAAI,EAAE,EAAE,GAAGN;AAAL;AAHW,CAArB;;AAMA,SAASO,YAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AAChD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKE,YAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaQ,MAAb,CAAoB,CAAC,EAAE,GAAGF;AAAL,SAAD,CAApB;AAApB,OAAP;;AACJ,SAAKG,YAAL;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaU,GAAb,CAAkBC,KAAD,IAAYA,KAAK,CAACf,EAAN,KAAaU,OAAO,CAACV,EAArB,GAA0B,EAAE,GAAGU;AAAL,SAA1B,GAA2CK,KAAxE;AAApB,OAAP;;AACJ,SAAKC,WAAL;AACI,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA4BR,OAAlC;AACA,YAAML,IAAI,GAAG,EAAE,GAAGE,KAAK,CAACF;AAAX,OAAb;AACAA,MAAAA,IAAI,CAACY,SAAD,CAAJ,GAAkBC,UAAlB;AACA,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA,IAAI,EAAE,EAAE,GAAGA;AAAL;AAAlB,OAAP;;AACJ,SAAKc,UAAL;AACI,YAAMJ,KAAK,GAAGR,KAAK,CAACH,MAAN,CAAagB,IAAb,CAAmBL,KAAD,IAAWA,KAAK,CAACf,EAAN,KAAaU,OAA1C,CAAd;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,IAAI,EAAE,EAAE,GAAGU;AAAL;AAAlB,OAAP;;AACJ,SAAKM,YAAL;AACI,aAAO,EAAE,GAAGd,KAAL;AAAYH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAakB,MAAb,CAAqBP,KAAD,IAAWA,KAAK,CAACf,EAAN,KAAaU,OAA5C;AAApB,OAAP;;AACJ,SAAKa,YAAL;AACI,aAAO,EAAE,GAAGhB,KAAL;AAAYiB,QAAAA,OAAO,EAAEd;AAArB,OAAP;;AACJ,SAAKe,WAAL;AACI,aAAO,EAAE,GAAGlB,KAAL;AAAYF,QAAAA,IAAI,EAAE,EAAE,GAAGN;AAAL;AAAlB,OAAP;;AACJ,SAAKD,UAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYJ,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKuB,cAAL;AACI,aAAO,EAAE,GAAGnB,KAAL;AAAYJ,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,MAAM,EAAE,CAAC,GAAGM,OAAJ;AAAtC,OAAP;;AACJ;AACI,aAAO,EAAE,GAAGH;AAAL,OAAP;AAxBR;AA0BH;;AAED,eAAeD,YAAf","sourcesContent":["import { FETCH_DATA } from \"./Action\";\n\nconst defaultFormValues = {\n    id: '',\n    name: '',\n};\n\nconst initialState = {\n    isLoading: true,\n    genres: [],\n    form: { ...defaultFormValues }\n}\n\nfunction genreReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case CREATE_GENRE:\n            return { ...state, genres: state.genres.concat([{ ...payload }]) };\n        case UPDATE_GENRE:\n            return { ...state, genres: state.genres.map((genre) => (genre.id === payload.id ? { ...payload } : genre)) };\n        case INPUT_GENRE:\n            const { inputName, inputValue } = payload;\n            const form = { ...state.form };\n            form[inputName] = inputValue;\n            return { ...state, form: { ...form } };\n        case EDIT_GENRE:\n            const genre = state.genres.find((genre) => genre.id === payload);\n            return { ...state, form: { ...genre } }\n        case DELETE_GENRE:\n            return { ...state, genres: state.genres.filter((genre) => genre.id !== payload) };\n        case SEARCH_GENRE:\n            return { ...state, keyword: payload };\n        case RESET_GENRE:\n            return { ...state, form: { ...defaultFormValues } };\n        case FETCH_DATA:\n            return { ...state, isLoading: true };\n        case FETCH_COMPLETE:\n            return { ...state, isLoading: false, genres: [...payload] }\n        default:\n            return { ...state };\n    }\n}\n\nexport default genreReducer;"]},"metadata":{},"sourceType":"module"}
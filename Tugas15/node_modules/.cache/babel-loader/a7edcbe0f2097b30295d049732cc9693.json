{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Tugas15/src/component/artists/component/ArtistForm.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Form, FormGroup, Col, Label, Input, Button, CardBody, Card, CardHeader, CustomInput } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createArtist, updateArtist } from \"../services/ArtistService\";\nimport { SET_LOADING, SUBMIT_COMPLETE, HANDLE_INPUT, HANDLE_IMAGE } from \"../reducers/Actions\";\n\nclass ArtistForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitArtistData = async () => {\n      const {\n        form,\n        photo\n      } = this.props;\n      return await createArtist(form, photo);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        setLoading,\n        submitComplete,\n        history\n      } = this.props;\n      setLoading();\n      this.submitArtistData().then(data => {\n        submitComplete(data);\n        history.replace('/artists');\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        form,\n        isLoading\n      } = this.props;\n      return form.name.length > 0 || isLoading;\n    };\n\n    this.state = {\n      isSubmitting: false\n    };\n  }\n\n  optionYear(x, y) {\n    let year = [];\n\n    for (let i = x; i <= y; i++) {\n      year.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: year[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }\n      }, i));\n    }\n\n    return year;\n  }\n\n  render() {\n    const {\n      form,\n      isLoading,\n      handleInputChange,\n      handleImageUpload\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Artists Form\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, \"Artists Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: form.name,\n      placeholder: \"Artist Name\",\n      onChange: event => handleInputChange('name', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"gender\",\n      name: \"gender\",\n      value: form.gender,\n      placeholder: \"Gender\",\n      onChange: event => handleInputChange('gender', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, \"Biography\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      id: \"biography\",\n      name: \"biography\",\n      value: form.biography,\n      placeholder: \"Biography\",\n      onChange: event => handleInputChange('biography', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, \"Debut Year\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      id: \"debutYear\",\n      name: \"debutYear\",\n      value: form.debutYear,\n      onChange: event => handleInputChange('debutYear', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, \"Select Debut Year\"), this.optionYear(1990, 2020)))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"photo\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"Artist Photo\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"file\",\n      label: form.photo,\n      onChange: event => handleImageUpload(event.target.files),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        size: 9,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      disabled: !this.isValid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, !isLoading ? 'Save Artist' : 'Submiting Data...')))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleInputChange: (inputName, inputValue) => dispatch({\n      type: HANDLE_INPUT,\n      payload: {\n        inputName,\n        inputValue\n      }\n    }),\n    setLoading: () => dispatch({\n      type: SET_LOADING\n    }),\n    submitComplete: () => dispatch({\n      type: SUBMIT_COMPLETE\n    }),\n    handleImageUpload: payload => dispatch({\n      type: HANDLE_IMAGE,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ArtistForm));","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Tugas15/src/component/artists/component/ArtistForm.js"],"names":["React","Component","Fragment","Form","FormGroup","Col","Label","Input","Button","CardBody","Card","CardHeader","CustomInput","connect","withRouter","createArtist","updateArtist","SET_LOADING","SUBMIT_COMPLETE","HANDLE_INPUT","HANDLE_IMAGE","ArtistForm","constructor","props","submitArtistData","form","photo","handleSubmit","event","preventDefault","setLoading","submitComplete","history","then","data","replace","isValid","isLoading","name","length","state","isSubmitting","optionYear","x","y","year","i","push","render","handleInputChange","handleImageUpload","target","value","gender","biography","debutYear","files","size","offset","mapStateToProps","mapDispatchToProps","dispatch","inputName","inputValue","type","payload"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Form, FormGroup, Col, Label, Input, Button, CardBody, Card, CardHeader, CustomInput } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createArtist, updateArtist } from \"../services/ArtistService\";\nimport { SET_LOADING, SUBMIT_COMPLETE, HANDLE_INPUT, HANDLE_IMAGE } from \"../reducers/Actions\";\n\n\nclass ArtistForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSubmitting: false,\n\n        }\n    }\n\n    submitArtistData = async () => {\n        const { form, photo } = this.props;\n        return await createArtist(form, photo);\n    }\n\n\n\n    //isSubmiting akan berubah menjadi false ketika submit sudah komplit\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { setLoading, submitComplete, history } = this.props;\n        setLoading();\n        this.submitArtistData()\n            .then((data) => {\n                submitComplete(data);\n                history.replace('/artists');\n            });\n    }\n\n    isValid = () => {\n        const { form, isLoading } = this.props;\n        return form.name.length > 0 || isLoading;\n    }\n\n    optionYear(x, y) {\n        let year = [];\n        for (let i = x; i <= y; i++) {\n            year.push(<option key={i} value={year[i]}>{i}</option>);\n        }\n        return year;\n    }\n\n    render() {\n        const { form, isLoading, handleInputChange, handleImageUpload } = this.props;\n        return (\n            <Fragment>\n                <Card>\n                    <CardHeader tag=\"form\">Artists Form</CardHeader>\n                    <CardBody>\n\n                        <Form onSubmit={(event) => this.handleSubmit(event)}>\n                            <FormGroup row>\n                                <Label for=\"name\" sm=\"3\">Artists Name</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"text\" id=\"name\" name=\"name\" value={form.name} placeholder=\"Artist Name\" onChange={(event) => handleInputChange('name', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"name\" sm=\"3\">Gender</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"text\" id=\"gender\" name=\"gender\" value={form.gender} placeholder=\"Gender\" onChange={(event) => handleInputChange('gender', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"name\" sm=\"3\">Biography</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"textarea\" id=\"biography\" name=\"biography\" value={form.biography} placeholder=\"Biography\" onChange={(event) => handleInputChange('biography', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"name\" sm=\"3\">Debut Year</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"select\" id=\"debutYear\" name=\"debutYear\" value={form.debutYear} onChange={(event) => handleInputChange('debutYear', event.target.value)}>\n                                        <option>Select Debut Year</option>\n                                        {this.optionYear(1990, 2020)}\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"photo\" sm=\"3\">Artist Photo</Label>\n                                <Col sm=\"9\">\n                                    <CustomInput type=\"file\" label={form.photo} onChange={(event) => handleImageUpload(event.target.files)} />\n                                </Col>\n                            </FormGroup>\n\n                            <FormGroup row>\n                                <Col sm={{ size: 9, offset: 3 }}>\n                                    <Button type=\"submit\" color=\"primary\" disabled={!this.isValid()}>\n                                        {!isLoading ? 'Save Artist' : 'Submiting Data...'}\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { ...state };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        handleInputChange: (inputName, inputValue) => dispatch({ type: HANDLE_INPUT, payload: { inputName, inputValue } }),\n        setLoading: () => dispatch({ type: SET_LOADING }),\n        submitComplete: () => dispatch({ type: SUBMIT_COMPLETE }),\n        handleImageUpload: (payload) => dispatch({ type: HANDLE_IMAGE, payload }),\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ArtistForm));"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/GenreForm.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Input, Card, Col, Label, Form, CardHeader, FormGroup, CardBody } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'reactstrap/lib/Button';\nimport { INPUT_GENRE, SUBMIT_COMPLETE, SET_LOADING } from '../reducers/Actions';\nimport { createGenre } from '../services/GenreService';\n\nclass GenreForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitGenreData = async () => {\n      const {\n        form\n      } = this.props;\n      return await createGenre(form);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        setLoading,\n        submitComplete,\n        history\n      } = this.props;\n      setLoading();\n      this.submitGenreData().then(data => {\n        submitComplete();\n        history.replace('/genres');\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        form,\n        isLoading\n      } = this.props;\n      return form.name.length > 0 || isLoading;\n    };\n\n    this.handleReturn = () => {\n      const {\n        history\n      } = this.props;\n      history.replace(\"/genres\");\n    };\n  }\n\n  render() {\n    const {\n      form,\n      isLoading,\n      handleInputChanges\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Genre Form\"), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      sm: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, \"Genre Name\"), /*#__PURE__*/React.createElement(Col, {\n      sm: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: form.name,\n      placeholder: \"Genre Name\",\n      onChange: event => handleInputChanges('name', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: {\n        size: 9,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      disabled: !this.isValid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, !isLoading ? 'Save Genre' : 'Submiting Data...')))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleInputChanges: (inputName, inputValue) => dispatch({\n      type: INPUT_GENRE,\n      payload: {\n        inputName,\n        inputValue\n      }\n    }),\n    setLoading: () => dispatch({\n      type: SET_LOADING\n    }),\n    submitComplete: () => dispatch({\n      type: SUBMIT_COMPLETE\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GenreForm));","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/GenreForm.js"],"names":["React","Component","Fragment","Input","Card","Col","Label","Form","CardHeader","FormGroup","CardBody","withRouter","connect","Button","INPUT_GENRE","SUBMIT_COMPLETE","SET_LOADING","createGenre","GenreForm","submitGenreData","form","props","handleSubmit","event","preventDefault","setLoading","submitComplete","history","then","data","replace","isValid","isLoading","name","length","handleReturn","render","handleInputChanges","target","value","size","offset","mapStateToProps","state","mapDispatchToProps","dispatch","inputName","inputValue","type","payload"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Input, Card, Col, Label, Form, CardHeader, FormGroup, CardBody } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'reactstrap/lib/Button';\nimport { INPUT_GENRE, SUBMIT_COMPLETE, SET_LOADING } from '../reducers/Actions';\nimport { createGenre } from '../services/GenreService';\n\n\nclass GenreForm extends Component {\n\n    submitGenreData = async () => {\n        const { form } = this.props;\n        return await createGenre(form)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { setLoading, submitComplete, history } = this.props;\n        setLoading();\n        this.submitGenreData().then((data) => {\n            submitComplete();\n            history.replace('/genres');\n        });\n    }\n\n    isValid = () => {\n        const { form, isLoading } = this.props;\n        return form.name.length > 0 || isLoading;\n    }\n\n    handleReturn = () => {\n        const { history } = this.props;\n        history.replace(\"/genres\")\n    }\n\n    render() {\n        const { form, isLoading, handleInputChanges } = this.props\n        return (\n            <Fragment>\n                <Card>\n                    <CardHeader tag=\"form\">Genre Form</CardHeader>\n                    <CardBody>\n                        <Form onSubmit={(event) => this.handleSubmit(event)}>\n                            <FormGroup row>\n                                <Label for=\"name\" sm=\"3\">Genre Name</Label>\n                                <Col sm=\"9\">\n                                    <Input type=\"text\" id=\"name\" name=\"name\" value={form.name} placeholder=\"Genre Name\" onChange={(event) => handleInputChanges('name', event.target.value)} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col sm={{ size: 9, offset: 3 }}>\n                                    <Button type=\"submit\" color=\"primary\" disabled={!this.isValid()}>\n                                        {!isLoading ? 'Save Genre' : 'Submiting Data...'}\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { ...state }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        handleInputChanges: (inputName, inputValue) => dispatch({ type: INPUT_GENRE, payload: { inputName, inputValue } }),\n        setLoading: () => dispatch({ type: SET_LOADING }),\n        submitComplete: () => dispatch({ type: SUBMIT_COMPLETE }),\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(GenreForm));"]},"metadata":{},"sourceType":"module"}
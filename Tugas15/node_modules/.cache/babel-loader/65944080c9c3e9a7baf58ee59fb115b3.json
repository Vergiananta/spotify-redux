{"ast":null,"code":"var _jsxFileName = \"/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/ListGenre.js\";\nimport React, { Component } from \"react\";\nimport { Table, Card, CardHeader, Spinner, Button } from \"reactstrap\";\nimport { FETCH_COMPLETE, DELETE_GENRE, SET_LOADING, EDIT_BUTTON } from \"../reducers/Actions\";\nimport * as Service from \"../services/GenreService\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass ListGenre extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEdit = genreId => {};\n  }\n\n  componentDidMount() {\n    const {\n      fetchData,\n      fetchComplete\n    } = this.props;\n    fetchData();\n    Service.getGenres().then(genres => {\n      fetchComplete(genres);\n    });\n  }\n\n  generateTableRows() {\n    const {\n      genres,\n      handleDelete\n    } = this.props;\n    let rows = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Spinner, {\n      type: \"grow\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 65\n      }\n    })));\n\n    if (!this.props.isLoading) {\n      rows = genres.map((genre, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, genre.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          color: \"danger\",\n          size: \"sm\",\n          className: \"shadow\",\n          onClick: () => handleDelete(genre.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }\n        }, \"Delete\")));\n      });\n    }\n\n    return rows;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      tag: \"strong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Genres\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/genres/form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"float-right\",\n      size: \"sm\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }\n    }, \" New Genre\")), \">\"), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      striped: true,\n      hover: true,\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, this.generateTableRows())));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchData: () => dispatch({\n      type: SET_LOADING\n    }),\n    fetchComplete: payload => dispatch({\n      type: FETCH_COMPLETE,\n      payload\n    }),\n    handleDelete: payload => dispatch({\n      type: DELETE_GENRE,\n      payload\n    }),\n    handleEdit: payload => dispatch({\n      type: EDIT_BUTTON,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListGenre);","map":{"version":3,"sources":["/home/vergi/Documents/materi pascal/Week_11/Latihan fetching/empty_project2/src/component/genres/component/ListGenre.js"],"names":["React","Component","Table","Card","CardHeader","Spinner","Button","FETCH_COMPLETE","DELETE_GENRE","SET_LOADING","EDIT_BUTTON","Service","connect","Link","ListGenre","handleEdit","genreId","componentDidMount","fetchData","fetchComplete","props","getGenres","then","genres","generateTableRows","handleDelete","rows","isLoading","map","genre","index","name","id","render","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,OAAlC,EAA2CC,MAA3C,QAAyD,YAAzD;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,WAAvC,EAAoDC,WAApD,QAAuE,qBAAvE;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9Bc,UAF8B,GAEhBC,OAAD,IAAa,CAEzB,CAJ6B;AAAA;;AAM9BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA+B,KAAKC,KAA1C;AAEAF,IAAAA,SAAS;AAETP,IAAAA,OAAO,CAACU,SAAR,GAAoBC,IAApB,CAA0BC,MAAD,IAAY;AACjCJ,MAAAA,aAAa,CAACI,MAAD,CAAb;AACH,KAFD;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAED,MAAAA,MAAF;AAAUE,MAAAA;AAAV,QAA2B,KAAKL,KAAtC;AACA,QAAIM,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAyC,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,CAAJ,CAAX;;AAEA,QAAI,CAAC,KAAKN,KAAL,CAAWO,SAAhB,EAA2B;AACvBD,MAAAA,IAAI,GAAGH,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChC,4BACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAK,GAAG,CAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,KAAK,CAACE,IAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AACI,UAAA,KAAK,EAAC,QADV;AACmB,UAAA,IAAI,EAAC,IADxB;AAEI,UAAA,SAAS,EAAC,QAFd;AAEuB,UAAA,OAAO,EAAE,MAAMN,YAAY,CAACI,KAAK,CAACG,EAAP,CAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAHJ,CADJ;AAaH,OAdM,CAAP;AAeH;;AAED,WAAON,IAAP;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,IAAI,EAAC,IAArC;AAA0C,MAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,CADA,MADJ,eAKI,oBAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAkB,MAAA,OAAO,MAAzB;AAA0B,MAAA,KAAK,MAA/B;AAAgC,MAAA,SAAS,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,iBAAL,EADL,CATJ,CALJ,CADJ;AAqBH;;AAhE6B;;AAoElC,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO,EAAE,GAAGA;AAAL,GAAP;AACH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHnB,IAAAA,SAAS,EAAE,MAAMmB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE7B;AAAR,KAAD,CADtB;AAEHU,IAAAA,aAAa,EAAGoB,OAAD,IAAaF,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE/B,cAAR;AAAwBgC,MAAAA;AAAxB,KAAD,CAFjC;AAGHd,IAAAA,YAAY,EAAGc,OAAD,IAAaF,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE9B,YAAR;AAAsB+B,MAAAA;AAAtB,KAAD,CAHhC;AAIHxB,IAAAA,UAAU,EAAGwB,OAAD,IAAaF,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE5B,WAAR;AAAqB6B,MAAAA;AAArB,KAAD;AAJ9B,GAAP;AAMH;;AAED,eAAe3B,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Card, CardHeader, Spinner, Button } from \"reactstrap\";\nimport { FETCH_COMPLETE, DELETE_GENRE, SET_LOADING, EDIT_BUTTON } from \"../reducers/Actions\";\nimport * as Service from \"../services/GenreService\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n\nclass ListGenre extends Component {\n\n    handleEdit = (genreId) => {\n\n    }\n\n    componentDidMount() {\n        const { fetchData, fetchComplete } = this.props;\n\n        fetchData();\n\n        Service.getGenres().then((genres) => {\n            fetchComplete(genres);\n        });\n\n    }\n\n    generateTableRows() {\n        const { genres, handleDelete } = this.props;\n        let rows = <tr><td colSpan=\"2\" className=\"text-center\"> <Spinner type=\"grow\" color=\"primary\" /></td></tr>\n\n        if (!this.props.isLoading) {\n            rows = genres.map((genre, index) => {\n                return (\n                    <tr key={index}>\n                        <td>{index + 1}</td>\n                        <td>{genre.name}</td>\n                        <td>\n                            <Button type=\"button\"\n                                color=\"danger\" size=\"sm\"\n                                className=\"shadow\" onClick={() => handleDelete(genre.id)}>\n                                Delete\n                                </Button>\n                        </td>\n                    </tr>\n                )\n            });\n        }\n\n        return rows;\n    }\n\n    render() {\n        return (\n            <Card className=\"shadow\">\n                <CardHeader tag=\"strong\">Genres\n                <Link to=\"/genres/form\"><Button className=\"float-right\" size=\"sm\" color=\"primary\"> New Genre</Button></Link>>\n                </CardHeader>\n\n                <Table responsive striped hover className=\"m-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>\n                                Name\n            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.generateTableRows()}\n                    </tbody>\n                </Table>\n            </Card>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return { ...state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchData: () => dispatch({ type: SET_LOADING }),\n        fetchComplete: (payload) => dispatch({ type: FETCH_COMPLETE, payload }),\n        handleDelete: (payload) => dispatch({ type: DELETE_GENRE, payload }),\n        handleEdit: (payload) => dispatch({ type: EDIT_BUTTON, payload }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListGenre);"]},"metadata":{},"sourceType":"module"}